大型語言模型非常擅長將輸入轉換為不同的格式，例如輸入一段文字並將其轉換或翻譯為另一種語言，或者幫助拼寫和文法修正，因此它可以接收一些不太符合文法的文本並幫助您稍微修正一下，甚至還可以轉換格式，例如輸入 HTML 並輸出 JSON。
因此，我曾使用一堆正則表達式寫一堆應用程序，現在使用大型語言模型和幾個提示肯定更簡單了。
現在我使用Chad GPT來校對我寫的幾乎所有內容，所以我很高興能在筆記本中展示更多實例。
首先，我們將導入OpenAI，並使用我們在整個視頻中一直使用的getCompletion助手函數。

第一件事是翻譯。
大型語言模型訓練了大量來自許多來源（其中很多來自互聯網），並且以多種不同的語言這一點賦予了模型進行翻譯的能力。
這些模型以各種技能程度知道上百種語言。
所以，讓我們舉幾個例子來說明如何使用這種能力。
讓我們從一些簡單的開始。

在第一個例子中，提示是將以下英文文本翻譯為西班牙文。
嗨，我想訂購攪拌機。
回答是Hola，me gustaría ordenar una licuadora。
在另一個例子中，提示是告訴我這是什麼語言。
然後這是用法語寫的：“Combien coûte la lampe d'air”。
模型已經確定了這是法語。
模型還可以同時進行多種翻譯。

因此，在這個例子中，假設我們要將以下文本翻譯成法語和西班牙語，並且還要使用英語海盜的形式。
文本是“I want to order a basketball”。
所以，在某些語言中，翻譯會因講話者與聽眾的關係而改變。
您也可以向語言模型解釋這一點。
因此，我們說：將以下文本翻譯為西班牙語的正式和非正式形式。
您想訂購枕頭嗎？請注意，這裡使用的分隔符與這些反引號不同。
這並不重要，只要它是一種清晰分離即可。
所以在這裡，我們有正式和非正式的形式。

當您與某人交談時可能對他們用正式口氣，例如對長輩或在專業環境中時。
當您與朋友群體交談時，您使用非正式口氣。
我實際上不會講西班牙語，但我爸爸會，他說這是正確的。
因此，對於下一個示例，我們假設我們負責一家跨國電子商務公司，因此用戶消息將以所有不同的語言進行，因此用戶將以各種語言告訴我們關於其 IT 問題。
所以，我們需要一個通用翻譯器。
首先，我們只需貼上各種不同語言的用戶消息列表，然後我們將循環遍歷每一個用戶消息。
因此，對於用戶消息中出現的問題，我將複製這個稍微長一些的代碼塊。
所以，首先要求模型告訴我們該問題使用的語言。
然後，我們將列印出原始消息的語言和問題，然後我們會要求模型將其翻譯成英語和韓語。
因此，我們有各種語言，然後模型將其翻譯成英語，然後翻譯成韓語，您可以在這裡看到模型說法語。
那是因為來自此提示的回應將是這是法語。
如果您希望這只是一個詞，您可以嘗試編輯此提示以說些什麼，例如告訴我這是什麼語言，僅回答一個詞或不使用句子之類的東西。
或者您可以請求以JSON格式或類似的格式進行處理，這可能會鼓勵它不使用整個句子。
因此，令人驚嘆的是，您剛剛建立了一個通用翻譯器。
同時，請隨意暫停視頻並添加您想嘗試的任何其他語言，也許是您自己會說的語言，並查看模型的效果。
所以我們接下來要深入研究的是調音轉換。
書寫可以根據預期的受眾而不同，您知道，我寫給同事或教授的電子郵件的方式顯然會與我發簡訊給弟弟的方式有很大不同。
因此，ChatGBT實際上也可以幫助產生不同的口氣。
因此，讓我們看一些例子。
因此，在這個第一個例子中，提示是將以下俚語翻譯為商業信函。
哥們，我是Joe，查看這支立燈的規格。
因此，讓我們執行這個。
正如您所看到的，我們有了一封更正式的商業信函，其中包括對一個立式燈規格的建議。
我们接下来要做的是在不同格式之间进行转换。
ChatGBT非常擅长在不同格式之间进行翻譯，例如JSON到HTML，XML，各种东西。
降价。
因此，在提示中，我们将描述输入和输出格式。
因此，这是一个例子。
因此，我们有一个包含餐厅员工姓名和电子邮件列表的JSON。
然后在提示中，我们要求模型将其从JSON转换为HTML。
因此，提示是将以下Python字典从JSON转换为具有列标题和标题的HTML表。
然后，我们将获得模型的响应并将其打印出来。
因此，这里有一些HTML显示所有员工姓名和电子邮件。
因此，现在让我们看看我们是否可以查看此HTML。
因此，我们将使用此Python库的显示函数。
显示HTML响应。
在这里，您可以看到这是一个格式良好的HTML表。
我们接下来要做的是拼写检查和语法检查。
这是ChatGBT的一种非常受欢迎的用途。
我强烈建议这样做。
我一直这样做。
当您使用非本地语言时，这特别有用。
因此，这里有一些例子，其中包含一些常见的语法和拼写问题，以及语言模型可以帮助解决这些问题的方法。
因此，我将粘贴一些具有某些语法或拼写错误的句子列表。
然后，我们将遍历每个句子。
要求模型审核这些。
审核并更正。
然后，我们将使用某些分隔符。
然后我们将获得响应并像往常一样将其打印出来。
因此，该模型能够更正所有这些语法错误。
我们可以使用上面讨论的一些技术。
因此，要改进提示，我们可以说校对以下文本并更正。
并重新编写的版本。
如果您没有找到任何错误，就说没有找到错误。
让我们试试这个。
这样，我们就能够……哦，他们仍在这里使用引号。
但是，您可以想象，通过逐步的提示开发，您可以找到一种更可靠的方式。
因此，现在让我们做另一个例子。
在将文本发布到公共论坛之前，始终检查您的文本是很有用的。
因此，我们将通过一个示例进行研究。
檢查評論。

所以這裡是一篇關於填充熊貓的評論。

所以我們要求模型校對和更正這篇評論。

很好。
所以我們有了這個更正後的版本。

而我們可以做的一件很酷的事情是找到原始評論和模型輸出之間的差異。

因此，我們要使用RedLines Python套件來做這個。

我們會得到原始評論的差異和模型輸出之間的差異，
然後顯示這個。

所以在這裡，您可以看到原始評論和模型輸出之間的不同以及已經被更正的事情。

因此，我們使用的提示是，校對和更正此評論，但您也可以進行更加戲劇性的改變，
如調整口氣等。
 所以，讓我們再試一次。

因此，在這個提示中，我們要求模型校對和更正相同的評論，
同時使其更具說服力，並確保其符合APA風格並鍛鍊高級讀者。

我們還要求以markdown格式輸出。
所以我們使用原始評論上面的相同文本。
所以讓我們執行這個。

到這裡，我們有了一個擴展的APA風格的SoftPanda評論。

這就是轉換視頻的全部內容。
接下來，我們將展開擴展，
從語言模型中提取更自由的、更長的回復。
